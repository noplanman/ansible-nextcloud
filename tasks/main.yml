---
# tasks file for nextcloud
- include: tasks/setup_env.yml
  # load os specific variables

- name: Verify permission for installed TLS certificates
  include: tasks/tls_installed.yml
  when: nextcloud_tls_cert_method == "installed"

- name: Instal given signed certificates
  include: tasks/tls_signed.yml
  when: nextcloud_tls_cert_method == "signed"

- name: configure self signed TLS certificates
  include: tasks/tls_selfsigned.yml
  when: nextcloud_tls_cert_method == "self-signed"

- name: Configure Nginx web server.
  include: tasks/http_nginx.yml
  when: nextcloud_websrv == "nginx"

- name: Configure Apache web server
  include: tasks/http_apache.yml
  when: nextcloud_websrv == "apache"

- name: Configure {{ nextcloud_db_backend }} database
  include: tasks/db_mysql.yml
  when: nextcloud_db_backend in ["mysql", "mariadb"] and nextcloud_install_db == true

- name: Configure PostgreSQL database
  include: tasks/db_postgresql.yml
  when: nextcloud_db_backend in ["pgsql"] and nextcloud_install_db == true

- name: Check Nextcloud installed
  stat: "path={{ nextcloud_webroot }}/index.php"
  register: _nextcloud_installed

- name: Downloading Nextcloud
  include: tasks/nc_download.yml
  when: not _nextcloud_installed.stat.exists

- name: Check Nextcloud configuration exists.
  stat: path="{{ nextcloud_webroot }}/config/config.php"
  register: _nextcloud_conf

- name: Check Nextcloud is configured
  command: grep -q "{{ nextcloud_trusted_domain| first }}" {{ nextcloud_webroot }}/config/config.php
  failed_when: False
  changed_when: False
  register: _nextcloud_configured
  when: _nextcloud_conf.stat.exists

- name: Nextcloud installation
  include: tasks/nc_installation.yml
  when: (not _nextcloud_conf.stat.exists) or (_nextcloud_configured.rc is defined and _nextcloud_configured.rc != 0)
